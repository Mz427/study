#LVS工作模式:
LVS-NAT:
	优点: 支持端口映射, 适合流量较小的场景.
	缺点: 请求和响应报文都经过负载均衡服务器LB, lb性能瓶颈.
LVS-DR:
	优点: 响应报文不经由Director, 性能最高.
	缺点: 不能端口映射, 必须统一局域网, 下一跳mac地址限制.
LVS-TUN:
	优点: 公网地址.
	缺点: 不能端口映射, 隧道技术会额外花费性能, 加解密等, 增大开销.
FULLNAT:
	优点: 真实服务器可以不用配置默认网关为LB.
	缺点: RealServer无法获得用户IP.

#LVS调度算法:
#动态:
rr  轮循调度 #均等地对待每一台服务器, 不管服务器上的实际连接数和系统负载.
wrr 加权轮调 #调度器可以自动问询真实服务器的负载情况, 并动态调整权值.
dh  目标地址散列调度算法 #该算法是根据目标IP地址通过散列函数将目标IP与服务器建立映射关系, 出现服务器不可用或负载过高的情况下, 发往该目标IP的请求会固定发给该服务器.
sh  源地址散列调度算法 #与目标地址散列调度算法类似, 但它是根据源地址散列算法进行静态分配固定的服务器资源.
#静态:
lc    最少链接 #动态地将网络请求调度到已建立的连接数最少的服务器上, 如果集群真实的服务器具有相近的系统性能, 采用该算法可以较好的实现负载均衡.
wlc   加权最少链接 #调度器可以自动问询真实服务器的负载情况, 并动态调整权值带权重的谁不干活就给谁分配, 机器配置好的权重高.
sed   最少期望延迟 #不考虑非活动链接, 谁的权重大, 优先选择权重大的服务器来接收请求, 但权重大的机器会比较忙.
nq    永不排队 #无需队列, 如果有realserver的连接数为0就直接分配过去.
lblc  基于局部性的最少连接调度算法 #这个算法是请求数据包的目标IP地址的一种调度算法, 该算法先根据请求的目标IP地址寻找最近的该目标IP地址所有使用的服务器, 如果这台服务器依然可用, 并且有能力处理该请求, 调度器会尽量选择相同的服务器, 否则会继续选择其它可行的服务器.
lblcr 复杂的基于局部性最少的连接算法 #记录的不是要给目标IP与一台服务器之间的连接记录, 它会维护一个目标IP到一组服务器之间的映射关系, 防止单点服务器负载过高。.

#ipvsadm
#/etc/keepalived/keepalived.conf
